name: Flask on EKS
on:
  push:
    branches: ['main']
    
jobs:
  Login-to-AWS-and-Build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.29.0' # default is latest stable
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{secrets.REGION}}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ${{secrets.ECR_REPO_NAME}}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
    - name: update-manifest-file
      env:
        REPOSITORY: ${{secrets.ECR_REPO_NAME}}
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}

      run: |
        echo${{github.sha}}
        sed -i "s#$REGISTRY/$REPOSITORY:${{ github.sha }}#g" deployment.yaml
        git add -A
        git commit -am "Update image for - ${{ github.sha }}"
    - run: echo ${{ github }}
    - run: git push
  
 

    - name: Update kube config
      run: aws eks update-kubeconfig --name my-cluster
    
    - name: Deploy to EKS
      run: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
###

